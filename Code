import pygame
import random
pygame.init()

screen = pygame.display.set_mode((800, 600)) #game window
pygame.display.set_caption("Flappy Bird")#Game window title
clock = pygame.time.Clock() #handles FPS
font = pygame.font.Font(None, 36) #Font for displaing the score
font2 = pygame.font.Font(None, 72) #larger font

score = 0 #score variable

running = True

# Bird class
class Bird:
    def __init__(self):
        self.y = 400
        self.velocity = 0
        
    def flap(self):
        self.velocity = -3 # flap
        
    def physics(self):
        self.velocity += 0.1 #Gravity
        self.y += self.velocity
        
    def draw(self):
        pygame.draw.rect(screen, (255, 0, 0), (50, self.y, 30, 30))
        
bird = Bird()
#Pipe Class
class Pipe:
    def __init__(self, x):
        self.x = x
        self.hight = random.randint(50, 400)
        self.gap = 150 #Gap size between top and bottom pipes
        
    def move(self):
        self.x -= 2 #Move pipes to the left
        
    def draw(self):
        #Draw the top pipe
        pygame.draw.rect(screen, (0, 255, 0), (self.x, 0, 50, self.hight))
        #Draw the bottom pipe
        pygame.draw.rect(screen, (0, 255, 0), (self.x, self.hight + self. gap, 50, 600 - (self.hight + self.gap)))
        
pipes = []
spawn_pipe = 0 #timer for pipe spawn


while running: #Game loop ===========================================================
    clock.tick(60)
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            bird.flap()
            
            
   #spawn pipes
   spawn_pipe += 1 #increment timer
   if spawn_pipe >= 150: #pipe is spawned every 150 frames
       pipes.apend(Pipe(800))#this INSTIGATES a new pipe and puts it in the list!
       spawn_pipe = 0 #reset timer
   
   #Move pipes!
    for pipe in pipes: #walk through list of pipes
        pipe.move() #Move each pipe
        if check_collision(50, bird.y, pipe.x, pipe.hight): #check collision with brid
            running = False #Kill game is you hit a pipe
   # Render section ------------------------------------------
    screen.fill((0, 0, 0))
    bird.draw()
    bird.physics()
    
    score_text = font.render("Score:", True, (255, 255, 255))
    screen.blit(score_text, (650, 20)) # Position the score in the top-right corner
    score_text2 = font.render(str(score), True, (255, 255, 255))
    screen.blit(score_text2, (750, 20)) #Position the score in the top-right corner
    
    pygame.display.flip()
    
#end of game loop ---------------------------------------------------------------------
    
pygame.quit()
